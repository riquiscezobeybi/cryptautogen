 try:
        response = requests.post(url, headers=headers, json={}, timeout=15)
        data = response.json()
        
        if data.get('code') == '000000' and data.get('success'):
            return data['data']['configs']
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Ç–≤–µ—Ç–µ API")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
        return None

def format_airdrop_message(airdrop):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± airdrop'–µ"""
    # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤—Ä–µ–º–µ–Ω–∏
    start_time = datetime.fromtimestamp(airdrop['claimStartTime']/1000)
    end_time = datetime.fromtimestamp(airdrop['claimEndTime']/1000)
    
    message = f"üöÄ <b>–ù–û–í–´–ô AIRDROP –û–ë–ù–ê–†–£–ñ–ï–ù!</b>\n\n"
    message += f"üéØ <b>{airdrop['configName']} ({airdrop['tokenSymbol']})</b>\n"
    message += f"üìù {airdrop['configDescription']}\n"
    message += f"üí∞ <b>–ù–∞–≥—Ä–∞–¥–∞:</b> {airdrop['airdropAmount']} —Ç–æ–∫–µ–Ω–æ–≤\n"
    message += f"üéØ <b>–¢—Ä–µ–±—É–µ—Ç—Å—è –æ—á–∫–æ–≤:</b> {airdrop['pointsThreshold']}\n"
    message += f"üìä <b>–°—Ç–∞—Ç—É—Å:</b> {airdrop['status']}\n"
    message += f"‚è∞ <b>–ù–∞—á–∞–ª–æ:</b> {start_time.strftime('%d.%m.%Y %H:%M')}\n"
    message += f"‚è∞ <b>–û–∫–æ–Ω—á–∞–Ω–∏–µ:</b> {end_time.strftime('%d.%m.%Y %H:%M')}\n"
    message += f"üîó <b>–ö–æ–Ω—Ç—Ä–∞–∫—Ç:</b> <code>{airdrop['contractAddress']}</code>"
    
    return message
def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ë–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Alpha Airdrop –∑–∞–ø—É—â–µ–Ω!")
    print(f"üìç ID —á–∞—Ç–∞: {TELEGRAM_CHAT_ID}")
    print("‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—É—é  –º–∏–Ω—É—Ç—É...")
    print("üîï –ë–æ—Ç –±—É–¥–µ—Ç –º–æ–ª—á–∞—Ç—å –¥–æ –Ω–æ–≤–æ–≥–æ –∞–∏—Ä–¥—Ä–æ–ø–∞")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º Telegram
    test_msg = "ü§ñ <b>–ë–æ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ Binance Alpha Airdrop –∑–∞–ø—É—â–µ–Ω!</b>\n\n‚úÖ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç\nüîï –û–∂–∏–¥–∞—é –Ω–æ–≤—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã"
    if send_telegram_message(test_msg):
        print("‚úÖ –¢–µ—Å—Ç Telegram: –£–°–ü–ï–•")
    else:
        print("‚ùå –¢–µ—Å—Ç Telegram: –û–®–ò–ë–ö–ê")
        return
    
    # –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    print("üìã –ó–∞–≥—Ä—É–∂–∞—é —Ç–µ–∫—É—â–∏–µ –∞–∏—Ä–¥—Ä–æ–ø—ã...")
    initial_drops = check_alpha_airdrop()
    if initial_drops:
        for drop in initial_drops:
            tracked_airdrops.add(drop['configId'])
        print(f"‚úÖ –í –ø–∞–º—è—Ç–∏: {len(tracked_airdrops)} –∞–∏—Ä–¥—Ä–æ–ø–æ–≤")
    else:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞–∏—Ä–¥—Ä–æ–ø—ã")
        return
    
    print("\nüéØ –ù–∞—á–∏–Ω–∞—é –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
    
    # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
    while True:
        try:
            current_time = datetime.now().strftime('%H:%M:%S')
            print(f"[{current_time}] üîç –ü—Ä–æ–≤–µ—Ä—è—é –Ω–æ–≤—ã–µ –∞–∏—Ä–¥—Ä–æ–ø—ã...")
            
            drops = check_alpha_airdrop()
            if not drops:
                print("   üì≠ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ")
                time.sleep(CHECK_INTERVAL)
                continue
            
            new_drops = []
            for drop in drops:
                # –ò—â–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –∏ –Ω–æ–≤—ã–µ airdrop'—ã
                if (drop['status'] in ['active', 'upcoming'] and 
                    drop['configId'] not in tracked_airdrops):
                    new_drops.append(drop)
                    tracked_airdrops.add(drop['configId'])
            
            if new_drops:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(new_drops)} –Ω–æ–≤—ã—Ö –∞–∏—Ä–¥—Ä–æ–ø–æ–≤!")
                
                for airdrop in new_drops:
                    message = format_airdrop_message(airdrop)
                    if send_telegram_message(message):
                        print(f"   üì® –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {airdrop['configName']}")
                    else:
                        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {airdrop['configName']}")
            else:
                print("   üì≠ –ù–æ–≤—ã—Ö –∞–∏—Ä–¥—Ä–æ–ø–æ–≤ –Ω–µ—Ç")
            
            # –ñ–¥–µ–º —Å–ª–µ–¥—É—é—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
            next_check = datetime.now().timestamp() + CHECK_INTERVAL
            print(f"   ‚è∞ –°–ª–µ–¥—É—é—â–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞: {datetime.fromtimestamp(next_check).strftime('%H:%M:%S')}")
            time.sleep(CHECK_INTERVAL)
